{"version":3,"sources":["ImageGalleryItem/ImageGalleryItem.module.css","Modal/Modal.module.css","ImageGallery/ImageGallery.module.css","Button/Button.module.css","Searchbar/Searchbar.module.css","ImageGalleryItem/ImageGalleryItem.js","ImageGallery/ImageGallery.js","Searchbar/Searchbar.js","Button/Button.js","Modal/Modal.js","api/imageApi.js","App.js","index.js"],"names":["module","exports","ImageGalleryItem","image","modalImage","description","onModalClick","className","s","onClick","src","alt","ImageGalleryItemImage","ImageGallery","images","map","index","id","webformatURL","largeImageURL","tags","split","uuidv4","Searchbar","onSubmit","useState","query","setQuery","SearchForm","e","preventDefault","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","name","autoFocus","value","placeholder","onChange","target","toLowerCase","Button","onSearch","Modal","currentImage","useEffect","window","addEventListener","closeModalByEsc","removeEventListener","code","Overlay","currentTarget","ImageApi","searchQuery","page","a","fetch","res","ok","message","status","Error","json","hits","totalHits","App","setImages","currentPage","setCurrentPage","totalImages","setTotalImages","showModal","setShowModal","showLoader","setShowLoader","activeImageIndex","setActiveImageIndex","fetchImageOrPhoto","length","toast","error","theme","fetchImages","scrollTo","top","document","documentElement","scrollHeight","behavior","modalToggle","color","height","width","timeout","style","textAlign","autoClose","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1b84d8ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__15O8j\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2D7r6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__10GXh\",\"Modal\":\"Modal_Modal__2IITi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__P1xtd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__kFrfk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__11SUM\",\"SearchForm\":\"Searchbar_SearchForm__3YUCu\",\"SearchFormButton\":\"Searchbar_SearchFormButton__cBz-C\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__3yFff\",\"SearchFormInput\":\"Searchbar_SearchFormInput__1-k5A\"};","import PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nfunction ImageGalleryItem({ image, modalImage, description, onModalClick }) {\n  return (\n    <li className={s.ImageGalleryItem} onClick={onModalClick}>\n      <img\n        src={image}\n        data-src={modalImage}\n        alt={description}\n        className={s.ImageGalleryItemImage}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  image: PropTypes.string.isRequired,\n  modalImage: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  onModalClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport s from './ImageGallery.module.css';\n\nfunction ImageGallery({ images, onModalClick }) {\n  return (\n    <ul className={s.ImageGallery}>\n      {images.map(({ id, webformatURL, largeImageURL, tags }, index) => (\n        <ImageGalleryItem\n          onModalClick={() => onModalClick(index)}\n          key={`${id}-${uuidv4()}`}\n          image={webformatURL}\n          modalImage={largeImageURL}\n          description={tags.split(',')[0]}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object),\n  onModalClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Searchbar.module.css';\n\nfunction Searchbar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleChahge = e => {\n    const { value } = e.target;\n\n    setQuery(value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(query);\n  };\n\n  return (\n    <header className={s.Searchbar}>\n      <form className={s.SearchForm} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={s.SearchFormButton}>\n          <span className={s.SearchFormButtonLabel}>Search</span>\n        </button>\n\n        <input\n          className={s.SearchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          name=\"query\"\n          autoFocus\n          value={query}\n          placeholder=\"Search images and photos\"\n          onChange={handleChahge}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nfunction Button({ onSearch }) {\n  return (\n    <button type=\"button\" className={s.Button} onClick={onSearch}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\n\nfunction Modal({ onModalClick, currentImage }) {\n  useEffect(() => {\n    window.addEventListener('keydown', closeModalByEsc);\n\n    return () => {\n      window.removeEventListener('keydown', closeModalByEsc);\n    };\n  });\n\n  const closeModalByEsc = e => {\n    if (e.code !== 'Escape') {\n      return;\n    }\n\n    onModalClick();\n  };\n\n  const closeModalByBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onModalClick();\n    }\n  };\n\n  return (\n    <div className={s.Overlay} onClick={closeModalByBackdropClick}>\n      <div className={s.Modal}>\n        <img\n          src={currentImage.largeImageURL}\n          alt={currentImage.tags.split(',')[0]}\n        />\n      </div>\n    </div>\n  );\n}\n\nModal.propTypes = {\n  onModalClick: PropTypes.func.isRequired,\n  currentImage: PropTypes.object.isRequired,\n};\n\nexport default Modal;\n","const API_KEY = '22797563-ef7ac6a65cc3c0715a95e250f';\nconst BASE_URL = 'https://pixabay.com/api';\n\nclass ImageApi {\n  async fetchImageOrPhoto(searchQuery, page) {\n    const res = await fetch(\n      `${BASE_URL}/?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n    );\n\n    if (!res.ok) {\n      const message = `An error has occured: ${res.status}`;\n      throw new Error(message);\n    }\n\n    const { hits, totalHits } = await res.json();\n    return { hits, totalHits };\n  }\n}\n\nexport default ImageApi;\n","import { useState, useEffect } from 'react';\nimport Loader from 'react-loader-spinner';\nimport { ToastContainer, toast } from 'react-toastify';\nimport ImageGallery from './ImageGallery';\nimport Searchbar from './Searchbar';\nimport Button from './Button';\nimport Modal from './Modal';\nimport ImageApi from './api/imageApi';\nimport './App.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst image = new ImageApi();\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [images, setImages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalImages, setTotalImages] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [showLoader, setShowLoader] = useState(false);\n  const [activeImageIndex, setActiveImageIndex] = useState(null);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    async function fetchImages() {\n      try {\n        setShowLoader(true);\n        const { hits, totalHits } = await image.fetchImageOrPhoto(\n          query,\n          currentPage,\n        );\n\n        if (!hits.length) {\n          toast.error('Enter proper query', { theme: 'colored' });\n        }\n\n        setImages(images => {\n          return [...images, ...hits];\n        });\n        setTotalImages(totalHits);\n      } catch (error) {\n        toast.error(error.message, { theme: 'colored' });\n      } finally {\n        setShowLoader(false);\n      }\n    }\n\n    fetchImages();\n  }, [currentPage, query]);\n\n  useEffect(() => {\n    if (images.length > 12) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }, [images.length]);\n\n  const modalToggle = index => {\n    setShowModal(!showModal);\n    setActiveImageIndex(index);\n  };\n\n  const handleSumbit = value => {\n    if (value === '') {\n      toast.error('No query entered yet...', { theme: 'colored' });\n      return;\n    }\n\n    setQuery(value);\n    setImages([]);\n    setCurrentPage(1);\n  };\n\n  const loadMoreImages = () => {\n    if (images.length === totalImages) {\n      toast.error('There is no more images to show', { theme: 'colored' });\n      return;\n    }\n\n    setCurrentPage(currentPage => currentPage + 1);\n  };\n\n  return (\n    <>\n      <div className=\"App\">\n        <Searchbar onSubmit={handleSumbit} />\n\n        {images.length > 1 && (\n          <>\n            <ImageGallery images={images} onModalClick={modalToggle} />\n            {!showLoader && <Button onSearch={loadMoreImages} />}\n          </>\n        )}\n\n        {showLoader && (\n          <Loader\n            type=\"ThreeDots\"\n            color=\"#00BFFF\"\n            height={80}\n            width={80}\n            timeout={3000}\n            style={{ textAlign: 'center' }}\n          />\n        )}\n\n        {showModal && (\n          <Modal\n            currentImage={images[activeImageIndex]}\n            onModalClick={modalToggle}\n          />\n        )}\n      </div>\n\n      <ToastContainer\n        autoClose={3000}\n        pauseOnFocusLoss={false}\n        draggable={false}\n        pauseOnHover={false}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}